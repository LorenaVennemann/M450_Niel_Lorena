{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jilve\\\\TBZ\\\\M450_Niel_Lorena\\\\ci-cd\\\\recipe-planner-fronend-and-backend\\\\recipe-planner-fronend\\\\src\\\\components\\\\AddIngredient\\\\AddIngredient.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AddIngredient.css';\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddIngredient = ({\n  ingredient,\n  updateIngredient,\n  removeIngredient\n}) => {\n  const handleChange = field => e => {\n    const value = field === 'quantity' ? parseFloat(e.target.value) || 0 : e.target.value;\n    updateIngredient({\n      ...ingredient,\n      [field]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-1\",\n        controlId: `formBasicName${ingredient.listId}`,\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Name\",\n          value: ingredient.name || '',\n          onChange: handleChange('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-1\",\n        controlId: `formBasicUnit${ingredient.listId}`,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: ingredient.unit,\n          onChange: handleChange('unit'),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PIECE\",\n            children: \"PIECE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"GRAMM\",\n            children: \"GRAMM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"KILOGRAMM\",\n            children: \"KILOGRAMM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LITRE\",\n            children: \"LITRE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DECILITRE\",\n            children: \"DECILITRE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-1\",\n        controlId: `quantity${ingredient.listId}`,\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Quantity\",\n          type: \"number\",\n          value: ingredient.quantity || '',\n          onChange: handleChange('quantity')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 1,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => removeIngredient(ingredient),\n        variant: \"outline-dark\",\n        className: \"mb-1\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = AddIngredient;\nAddIngredient.propTypes = {\n  ingredient: PropTypes.shape({\n    listId: PropTypes.number.isRequired,\n    name: PropTypes.string,\n    unit: PropTypes.string,\n    quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }).isRequired,\n  updateIngredient: PropTypes.func.isRequired,\n  removeIngredient: PropTypes.func.isRequired\n};\nexport default AddIngredient;\nvar _c;\n$RefreshReg$(_c, \"AddIngredient\");","map":{"version":3,"names":["React","PropTypes","Button","Col","Form","Row","jsxDEV","_jsxDEV","AddIngredient","ingredient","updateIngredient","removeIngredient","handleChange","field","e","value","parseFloat","target","children","Group","className","controlId","listId","Control","placeholder","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Select","unit","type","quantity","xs","onClick","variant","_c","propTypes","shape","number","isRequired","string","oneOfType","func","$RefreshReg$"],"sources":["C:/Users/Jilve/TBZ/M450_Niel_Lorena/ci-cd/recipe-planner-fronend-and-backend/recipe-planner-fronend/src/components/AddIngredient/AddIngredient.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddIngredient.css';\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\n\r\nconst AddIngredient = ({ ingredient, updateIngredient, removeIngredient }) => {\r\n    const handleChange = (field) => (e) => {\r\n        const value = field === 'quantity' ? parseFloat(e.target.value) || 0 : e.target.value;\r\n        updateIngredient({ ...ingredient, [field]: value });\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Form.Group className=\"mb-1\" controlId={`formBasicName${ingredient.listId}`}>\r\n                    <Form.Control \r\n                        placeholder=\"Name\" \r\n                        value={ingredient.name || ''} \r\n                        onChange={handleChange('name')}\r\n                    />\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group className=\"mb-1\" controlId={`formBasicUnit${ingredient.listId}`}>\r\n                    <Form.Select \r\n                        value={ingredient.unit} \r\n                        onChange={handleChange('unit')}\r\n                    >\r\n                        <option value=\"PIECE\">PIECE</option>\r\n                        <option value=\"GRAMM\">GRAMM</option>\r\n                        <option value=\"KILOGRAMM\">KILOGRAMM</option>\r\n                        <option value=\"LITRE\">LITRE</option>\r\n                        <option value=\"DECILITRE\">DECILITRE</option>\r\n                    </Form.Select>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col>\r\n                <Form.Group className=\"mb-1\" controlId={`quantity${ingredient.listId}`}>\r\n                    <Form.Control \r\n                        placeholder=\"Quantity\" \r\n                        type=\"number\"\r\n                        value={ingredient.quantity || ''} \r\n                        onChange={handleChange('quantity')}\r\n                    />\r\n                </Form.Group>\r\n            </Col>\r\n            <Col xs={1}>\r\n                <Button\r\n                    onClick={() => removeIngredient(ingredient)}\r\n                    variant='outline-dark'\r\n                    className=\"mb-1\"\r\n                >x</Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nAddIngredient.propTypes = {\r\n    ingredient: PropTypes.shape({\r\n        listId: PropTypes.number.isRequired,\r\n        name: PropTypes.string,\r\n        unit: PropTypes.string,\r\n        quantity: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    }).isRequired,\r\n    updateIngredient: PropTypes.func.isRequired,\r\n    removeIngredient: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddIngredient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}